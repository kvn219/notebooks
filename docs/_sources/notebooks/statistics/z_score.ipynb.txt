{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Z-Score"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2017-12-23T03:50:11.449206Z",
     "start_time": "2017-12-23T03:50:11.444071Z"
    }
   },
   "source": [
    "A z-score measures how many standard deviations above or below the mean a data point is.\n",
    "\n",
    "> \n",
    "\\begin{align}\n",
    "z = \\frac{data\\ point - mean}{standard\\ deviation} \\\\\n",
    "\\end{align}\n",
    "\n",
    "\n",
    "## Important facts\n",
    "\n",
    "- A positive z-score says the data point is above average.\n",
    "- A negative z-score says the data point is below average.\n",
    "- A z-score close to 0 says the data point is close to average.\n",
    "\n",
    "__Source:__ [Khan Academy](https://www.khanacademy.org/math/statistics-probability/modeling-distributions-of-data/z-scores/a/z-scores-review)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Code"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Packages"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2017-12-23T05:57:09.688050Z",
     "start_time": "2017-12-23T05:57:09.597470Z"
    }
   },
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2017-12-23T05:57:09.696900Z",
     "start_time": "2017-12-23T05:57:09.689962Z"
    }
   },
   "outputs": [],
   "source": [
    "def z_score(sample, data_point):\n",
    "    # data point needs to come from the sample\n",
    "    assert data_point in sample\n",
    "    avg = np.mean(sample)\n",
    "    sd = np.std(sample)\n",
    "    z_score = (data_point - avg)/sd\n",
    "    return z_score"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Input"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2017-12-23T05:57:09.712237Z",
     "start_time": "2017-12-23T05:57:09.699520Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([-0.59877513, -0.51223475, -1.40174708, -1.86207935, -0.10035927,\n",
       "        0.12655593,  0.32697515, -0.35919666, -1.865143  , -0.27180892,\n",
       "        0.42933215, -0.44281586, -0.30340738,  1.17923063, -0.09077022,\n",
       "       -0.60174546,  0.34032583, -0.58059233, -1.90742451, -1.00759512,\n",
       "        0.73630683, -0.13672296,  1.54279119, -0.4798372 ,  1.41396989,\n",
       "        0.87904765, -0.9446896 ,  1.02256431,  0.77302047, -0.15333515])"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sample = np.random.randn(30)\n",
    "sample"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2017-12-23T05:57:09.718076Z",
     "start_time": "2017-12-23T05:57:09.714016Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-0.59877512996891891"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# grab the first data point\n",
    "first_data_point = sample[0]\n",
    "first_data_point"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Output"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2017-12-23T05:57:09.723438Z",
     "start_time": "2017-12-23T05:57:09.719849Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-0.4795330537549915"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "z_score(sample, first_data_point)"
   ]
  }
 ],
 "metadata": {
  "hide_input": false,
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
