{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2018-01-27T14:15:05.172087Z",
     "start_time": "2018-01-27T14:15:05.169467Z"
    }
   },
   "source": [
    "# List of largest numbers\n",
    "\n",
    "From a list of numbers, return the largest possible number."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2018-01-27T14:16:40.764025Z",
     "start_time": "2018-01-27T14:16:40.757421Z"
    }
   },
   "outputs": [],
   "source": [
    "def largest_number_naive(arr):\n",
    "    placeholder = []\n",
    "    while len(arr) > 0:\n",
    "        max_ix = arr.index(max(arr))\n",
    "        max_digit = arr.pop(max_ix)\n",
    "        placeholder.append(max_digit)\n",
    "    return ''.join([str(n) for n in placeholder])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2018-01-27T14:16:41.208159Z",
     "start_time": "2018-01-27T14:16:41.203505Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'98431'"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list_of_numbers = [1, 3, 4, 9, 8]\n",
    "largest_number_naive(list_of_numbers)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2018-01-27T14:16:41.623796Z",
     "start_time": "2018-01-27T14:16:41.619739Z"
    }
   },
   "outputs": [],
   "source": [
    "def largest_number(arr):\n",
    "    arr = sorted(arr, reverse=True)\n",
    "    largest = ''.join([str(i) for i in arr])\n",
    "    return largest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2018-01-27T14:16:42.008120Z",
     "start_time": "2018-01-27T14:16:42.004155Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'98431'"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list_of_numbers = [1, 3, 4, 9, 8]\n",
    "largest_number(list_of_numbers)"
   ]
  }
 ],
 "metadata": {
  "hide_input": false,
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
